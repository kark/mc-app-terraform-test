name: "Build and Deploy Preview Environment"

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, closed]

jobs:
  preview-environment:
    name: "Build and Deploy Preview Environment"
    runs-on: ubuntu-latest
    env:
      tfcOrg: example-org-41e326
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: |
          if [ ${{ github.ref }} == 'refs/heads/main' ]; then
            yarn build
          else
            yarn build-staging
          fi
      # Only set up preview environment for pull requests
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TFC_API_TOKEN }}
      - name: Terraform Init
        id: init-workspace
        if: github.event_name == 'pull_request'
        run: |
          terraform init -input=false
      # Builds and deploys backend + Vercel preview environments
      - name: Build and deploy preview environment
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        id: build-deploy-preview-environment
        run: |
          terraform apply --auto-approve
      # Runs Terraform output to display the backend URL and Vercel preview URL
      - name: Terraform Output
        id: output
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        run: |
          terraform output -no-color
        continue-on-error: true
      # Creates comments on pull request with Terraform output
      - name: Create comment with Terraform output
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        # env:
        #   OUTPUT: "${{ steps.output.outputs.stdout }}" # We're using a static URL for now
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Preview Environment Outputs ðŸ–Œ
            \`\`\`
            https://mc-app-staging.vercel.app/
            \`\`\`
            `
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      # This builds the production environment
      - name: Build and deploy Prod Environment
        id: build-deploy-prod-environment
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform init -input=false
          terraform apply --auto-approve -var="is_prod=true"